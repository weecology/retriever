on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.11, 3.12]
    
    services:
      mysqldb_retriever:
        image: mysql:5.7
        env:
          MYSQL_USER: travis
          MYSQL_PASSWORD: Password12!
          MYSQL_ROOT_PASSWORD: Password12!
          MYSQL_DATABASE: testdb_retriever
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v2
      
      - name: Set up PostgreSQL with PostGIS
        uses: huaxk/postgis-action@v1
        with:
          postgresql version: '11'
          postgresql user: 'postgres'
          postgresql password: 'Password12!'
          postgresql db: 'testdb_retriever'

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install system dependencies
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable -y
          sudo apt-get update && sudo apt-get install -y \
            build-essential wget git locales locales-all \
            libpq-dev libgdal-dev gdal-bin postgis
          echo "export CPLUS_INCLUDE_PATH=/usr/include/gdal" >> ~/.bashrc
          echo "export C_INCLUDE_PATH=/usr/include/gdal" >> ~/.bashrc
          echo "export GDAL_VERSION=$(gdalinfo --version | cut -d' ' -f2)" >> ~/.bashrc
          source ~/.bashrc
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir --find-links=https://ci.gdal.org/job/gdal-wheels/lastSuccessfulBuild/artifact/gdal/dist/ GDAL
          pip install -r requirements.txt || true
      
      - name: Setup paths and files
        run: |
          chmod +x cli_tools/entrypoint.sh
          sh cli_tools/entrypoint.sh
          echo "export PATH=/usr/bin/python:$PATH" >> ~/.profile
          echo "export PYTHONPATH=/usr/bin/python:$PYTHONPATH" >> ~/.profile
          echo "export PGPASSFILE=~/.pgpass" >> ~/.profile
          chmod 600 ~/.pgpass ~/.my.cnf
      
      - name: PostGIS check version
        run: |
          export PGPASSWORD='Password12!'
          psql -d testdb_retriever -U postgres -h localhost -p 5432 -c "SELECT PostGIS_version();"
      
      - name: Install retriever
        run: |
          pip install -e .
          chmod 600 ~/.pgpass ~/.my.cnf
      
      - name: Run tests and linting
        run: |
          pytest -v -k "not test_geojson2csv and not test_mysql_integration" --cov=./retriever --cov-report=xml
          flake8 --ignore=E501,W503,E402,F401,F403,E722,F841,W504 retriever --max-line-length=90
          yapf -d --recursive ./retriever/ --style=.style.yapf
      
      - name: Upload coverage to Codecov
        if: matrix.python-version == 3.9
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
